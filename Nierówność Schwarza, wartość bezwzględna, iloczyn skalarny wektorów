#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <math.h>

void printVector(float* a, int n)
{
      int i;
      for ( i=0; i<n; i++ )
      {
            printf("%2i:  %7.3f\n",i, a[i]);
      }
}

float myRand(float x, float y)
{
      /* this function should generate a random number between x and y */

      /* this generates a random between 0 and RAND_MAX */
      int r0 = rand();

      /* this generates a random number between 0 and 1 */
      float r1 = ((float)r0) / ((float)RAND_MAX);

      /* this stretches the interval of the random number */
      float r2 = (y - x) * r1;

      /* this moves the interval so that the a is the lower values */
      float r3 = r2 + x;

      return r3;
}

float sum(float* a, int n)
{
      float sum = 0;
      int i;
      for ( i=0; i<n; i++ )
      {
            sum += a[i];
      }
      return sum;
}

float average(float* a, int n)
{
      return sum(a,n)/n;
}

float length_vector(float* a, int n)
{
    float sumkwadrat = 0;
    int i;
    for (i=0; i<n ;i++)
    {
        sumkwadrat += a[i]*a[i];
    }

    return sqrt(sumkwadrat);
}

void suma_wektorow(float* a, float* b, int n)
{
    float cwektor[10];
    int i;
    for (i=0; i<n; i++)
    {
        cwektor[i]=0;
    }
    for (i=0; i<n; i++)
    {
        cwektor[i] = a[i] + b[i];
    }
    printVector(cwektor,10);
}

float iloczyn_skalarny(float* a, float* b, int n)
{
    float iloczyn=0;
    int i;
    for(i=0; i<n; i++)
    {
        iloczyn+=a[i]*b[i];
    }
    return iloczyn;
}

//patrz
void schwarz_check(float* a, float* b, int n)
{
    float is=iloczyn_skalarny(a,b,n);
    float la=length_vector(a,n);
    float lb=length_vector(b,n);

    if(abs(is)<=abs(la)*abs(lb)){
        printf("The program checked the Schwarz inequality. It is true! :)");
    } else
           { printf("OOOppssss! Something is wrong. Schwarz is telling that it is impossible.");
           }
}

int main()
{
      float awektor[10];
      float bwektor[10];
      float c[10];

      /* seeding the random number generator: */
      srand(time(NULL));

      int i;
      for (i = 0; i < 10; i++)
      {
            /* generating a random floating point number between 0 and 1 */
            awektor[i] = myRand(-1,1);
            bwektor[i] = myRand(-1,1);
      }

      printf("The vector a is:\n");
      printVector(awektor,10);
      printf("The vector b is:\n");
      printVector(bwektor,10);

      printf("The sum of all elements a is: %8.3f\n",sum(awektor,10));
      printf("The sum of all elements b is: %8.3f\n",sum(bwektor,10));
      printf("The average value a is: %8.3f\n",average(awektor,10));
      printf("The average value b is: %8.3f\n",average(bwektor,10));
      printf("The length of a is: %8.3f\n",length_vector(awektor,10));
      printf("The length of b is: %8.3f\n",length_vector(bwektor,10));

      printf("The sum of 2 vectors is vector c:\n");
      suma_wektorow(awektor,bwektor,10);

      printf("The scalar product of the vectors is: %8.3f\n",iloczyn_skalarny(awektor,bwektor,10));
      //patrz
      schwarz_check(awektor,bwektor,10);


      return EXIT_SUCCESS;
}
